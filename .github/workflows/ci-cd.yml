name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements_koyeb.txt ]; then pip install -r requirements_koyeb.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements_koyeb.txt ]; then pip install -r requirements_koyeb.txt; fi
    - name: Check application startup
      run: |
        # Simple check to see if the app starts without errors
        python -c "import main; print('Application imported successfully')"
      env:
        API_ID: ${{ secrets.API_ID || '12345' }}
        API_HASH: ${{ secrets.API_HASH || 'dummy_hash' }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN || 'dummy_token' }}
        # These are placeholders for test only - not real credentials
        DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/postgres'
        PGHOST: 'localhost'
        PGPORT: '5432'
        PGUSER: 'postgres'
        PGPASSWORD: 'postgres'
        PGDATABASE: 'postgres'

  # Uncomment and configure if you want automatic deployment to a platform
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   steps:
  #   - uses: actions/checkout@v3
  #   
  #   # Example for Heroku deployment
  #   # - name: Deploy to Heroku
  #   #   uses: akhileshns/heroku-deploy@v3.12.13
  #   #   with:
  #   #     heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #   #     heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
  #   #     heroku_email: ${{ secrets.HEROKU_EMAIL }}